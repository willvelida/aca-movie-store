name: Upload Container App Module

on:
  workflow_dispatch:
    
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Sign into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Lint Bicep
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az bicep build --file ./deploy/modules/httpContainerApp.bicep

  publish-module:
    runs-on: ubuntu-latest
    environment: Production
    needs: lint
    steps:
      - uses: actions/checkout@v2

      - name: Sign into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get ACR name
        id: getacrname
        run: |
          acrName=$(az acr list --resource-group ${{ secrets.AZURE_RG }} --query "[0].name" -o tsv)
          echo "::set-output name=acrName::$acrName"

      - name: Get ACR Credentials
        id: getacrcreds
        run: |
          loginServer=$(az acr list --resource-group ${{ secrets.AZURE_RG }} --query "[0].loginServer" -o tsv)
          loginName=$(az acr credential show -n ${{ steps.getacrname.outputs.acrName }} --resource-group ${{ secrets.AZURE_RG }} --query username -o tsv)
          password=$(az acr credential show -n ${{ steps.getacrname.outputs.acrName }} --resource-group ${{ secrets.AZURE_RG }} --query "passwords[0].value" -o tsv)
          echo "::set-output name=loginServer::$loginServer"
          echo "::set-output name=loginName::$loginName"
          echo "::set-output name=password::$password"

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ steps.getacrcreds.outputs.loginServer }}
          username: ${{ steps.getacrname.outputs.acrName }}
          password: ${{ steps.getacrcreds.outputs.password }}
      
      - name: Deploy Bicep Module
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az bicep publish --file ./deploy/modules/httpContainerApp.bicep --target br:${{ steps.getacrname.outputs.acrName }}.azurecr.io/modules/http-container-app:${{ github.sha }}